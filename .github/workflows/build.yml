name: Build CVFit Releases

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Download YOLOv8 model
        run: |
          python -c "from ultralytics import YOLO; YOLO('yolov8n-pose.pt')"

      - name: Build with PyInstaller
        run: |
          pyinstaller cvfit.spec

      - name: Create ZIP archive
        run: |
          Compress-Archive -Path "dist\CVFit\*" -DestinationPath "dist\CVFit-Windows.zip"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/CVFit-Windows.zip

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/CVFit-Windows.zip

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Download YOLOv8 model
        run: |
          python -c "from ultralytics import YOLO; YOLO('yolov8n-pose.pt')"

      - name: Build with PyInstaller
        run: |
          pyinstaller cvfit.spec

      - name: Create ZIP archive
        run: |
          cd dist
          zip -r CVFit-macOS.zip CVFit.app
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/CVFit-macOS.zip

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/CVFit-macOS.zip

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Download YOLOv8 model
        run: |
          python -c "from ultralytics import YOLO; YOLO('yolov8n-pose.pt')"

      - name: Build with PyInstaller
        run: |
          pyinstaller cvfit.spec

      - name: Create tarball
        run: |
          cd dist
          tar -czvf CVFit-Linux.tar.gz CVFit
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/CVFit-Linux.tar.gz

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/CVFit-Linux.tar.gz
